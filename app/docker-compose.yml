version: '3.9'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "55432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "56379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  telemetry_gw_8030:
    build:
      context: ..
      dockerfile: app/services/telemetry-8030/Dockerfile
    environment:
      DATABASE_URL: postgresql://user:pass@postgres:5432/app
      ANALYTICS_URL: postgresql://user:pass@postgres:5432/app
      SERVICE_NAME: telemetry-8030
      TELEMETRY_URL: http://telemetry_gw_8030:8030
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8030:8030"

  admin_api_8031:
    build:
      context: ..
      dockerfile: app/services/admin-api-8031/Dockerfile
    environment:
      DATABASE_URL: postgresql://user:pass@postgres:5432/app
      ANALYTICS_URL: postgresql://user:pass@postgres:5432/app
      SERVICE_NAME: admin-api-8031
      TELEMETRY_URL: http://telemetry_gw_8030:8030
      ORCH_URL: http://orchestrator_8001:8001
      ONBOARDING_URL: http://onboarding_8034:8034
      # Health target overrides to match local service names
      BACKEND_HEALTH_URL: http://orchestrator_8001:8001/health
      VOICE_HEALTH_URL: http://telemetry_gw_8030:8030/health
      TELEMETRY_HEALTH_URL: http://telemetry_gw_8030:8030/health
      BILLING_HEALTH_URL: http://billing_gw_8032:8032/health
      ORCH_HEALTH_URL: http://orchestrator_8001:8001/health
      LEAD_HEALTH_URL: http://onboarding_8034:8034/health
      ENRICH_HEALTH_URL: http://address_lookup_8022:8022/health
      SCRAPER_HEALTH_URL: http://osint_contacts_8027:8027/health
      IMAGE_HEALTH_URL: http://vision_ai_8024:8024/health
      ML_HEALTH_URL: http://quality_engine_8026:8026/health
      STREET_HEALTH_URL: http://mapping_intel_8025:8025/health
      GEOCODER_HEALTH_URL: http://address_lookup_8022:8022/health
    depends_on:
      postgres:
        condition: service_healthy
      telemetry_gw_8030:
        condition: service_started
    ports:
      - "8031:8031"

  billing_gw_8032:
    build:
      context: ..
      dockerfile: app/services/billing-gw-8032/Dockerfile
    environment:
      SERVICE_NAME: billing-gw-8032
      TELEMETRY_URL: http://telemetry_gw_8030:8030
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-}
    depends_on:
      telemetry_gw_8030:
        condition: service_started
    ports:
      - "8032:8032"

volumes:
  postgres_data:
